
-- *******************
-- to convert sample time from DB OS time zone to browser time zone
-- *******************

-- first determine OS DB Time Zone:
SELECT TO_CHAR(SYSTIMESTAMP, 'tzr') FROM dual
	'+00:00'
		-- this is always HR:MI format, not TZ name format

-- then convert. Browser TZ has to be supplied in browser request
select trunc( from_tz(sample_time,'+00:00') at time zone 'America/New_York','MI') as sample_time_browser_tz, 
a.* from v$active_session_history a;

-- *******************
-- available wait classes
-- *******************
select distinct wait_class from v$event_name order by 1;
	-- 13 wait classes including Idle :
			Administrative
			Application
			Cluster
			Commit
			Concurrency
			Configuration
			Idle
			Network
			Other
			Queueing
			Scheduler
			System I/O
			User I/O
	-- ON CPU is not included, as it is not wait
	-- in v$active_session_history wait class is shown in WAIT_CLASS
	-- "ON CPU" is shown in SESSION_STATE

-- *******************
-- available events per wait class
-- *******************
select wait_class, count(1) from v$event_name
group by wait_class;
	-- too numerous to hard code ...
	-- too numerous to pivot in sql ...
			Administrative	57
			Application		17
			Cluster			68
			Commit			4
			Concurrency		49
			Configuration	27
			Idle			135
			Network			29
			Other			1314
			Queueing		9
			Scheduler		10
			System I/O		35
			User I/O		57

-- *******************
-- Top 10 wait events for a wait class
-- *******************
select event from (
	select count(1), event
	from v$active_session_history
	where wait_class = 'System I/O'
	group by event
	order by 1 desc
) where rownum <= 10;

-- *******************
-- Active Sessions Counts from v$active_session_history
-- Non-Pivot
-- sample_time is converted to browser tz
-- in 12c the table has sample_time_utc, but pre-12c do not have it, so i will stick with sample_time
-- *******************

	select count(distinct session_id||'-'||session_serial#) as active_sessions,
        trunc( from_tz(sample_time,'+00:00') at time zone 'America/New_York','MI') as sample_time_browser_tz, 
    	case when session_state = 'ON CPU' then 'ON CPU'
    	else wait_class	end as activity_class
    from v$active_session_history where wait_class <> 'Idle'
    group by
        trunc( from_tz(sample_time,'+00:00') at time zone 'America/New_York','MI'), 
    	case when session_state = 'ON CPU' then 'ON CPU'
    	else wait_class end
    order by 2 desc,3
	
		ACTIVE_SESSIONS, SAMPLE_TIME_BROWSER_TZ, ACTIVITY_CLASS
					1	06-FEB-19 04:24:00	System I/O
					1	06-FEB-19 04:19:00	System I/O
					1	06-FEB-19 04:14:00	Other
					3	06-FEB-19 04:14:00	System I/O
					1	06-FEB-19 04:12:00	System I/O
					1	06-FEB-19 04:09:00	System I/O
					...

-- *******************
-- Pivot of above sql
-- *******************
	with pivot_data AS (
		select count(distinct session_id||'-'||session_serial#) as active_sessions,
			trunc( from_tz(sample_time,'+00:00') at time zone 'America/New_York','MI') as sample_time_browser_tz, 
			case when session_state = 'ON CPU' then 'ON CPU'
			else wait_class	end as activity_class
		from v$active_session_history where wait_class <> 'Idle'
		group by
			trunc( from_tz(sample_time,'+00:00') at time zone 'America/New_York','MI'), 
			case when session_state = 'ON CPU' then 'ON CPU'
			else wait_class end 
		)
	--
	select 	sample_time_browser_tz, 
			administrative,
			application,
			clustr,
			commit,
			concurrency,
			configuration,
			idle,
			network,
			other,
			queueing,
			scheduler,
			system_io,
			user_io
	from pivot_data
	pivot
	( sum(active_sessions)
	for activity_class
		in ('Administrative' as administrative,
			'Application'	 as application,
			'Cluster'		 as clustr,
			'Commit'		 as commit,
			'Concurrency'	 as concurrency,
			'Configuration'	 as configuration,
			'Idle'			 as idle,
			'Network'		 as network,
			'Other'			 as other,
			'Queueing'		 as queueing,
			'Scheduler'		 as scheduler,
			'System I/O'	 as system_io,
			'User I/O'		 as user_io)
	)
	order by sample_time_browser_tz desc


-- *******************
-- Active Sessions Counts from DBA_HIST_ACTIVE_SESS_HISTORY
-- SAMPLE_TIME is aggregated in 5min intervals
-- SAMPLE_TIME is converted to browser tz
-- in 12c the table has SAMPLE_TIME_UTC, but pre-12c do not have it, so i will stick with SAMPLE_TIME
-- WAIT_CLASS is renamed "activity_class" by excluding "Idle" and taking "ON CPU" from SESSION_STATE
-- *******************
	select 
		count(distinct session_id||'-'||session_serial#) as active_sessions,
		trunc( from_tz(sample_time,'+00:00') at time zone 'America/New_York','MI') 
			- mod(extract(minute from from_tz(sample_time,'+00:00') at time zone 'America/New_York'), 5) 
			as sample_time_browser_tz_5min, 
		case when session_state = 'ON CPU' then 'ON CPU'
		else wait_class	end as activity_class
	from DBA_HIST_ACTIVE_SESS_HISTORY where wait_class <> 'Idle'
	group by
		trunc( from_tz(sample_time,'+00:00') at time zone 'America/New_York','MI') 
			- mod(extract(minute from from_tz(sample_time,'+00:00') at time zone 'America/New_York'), 5), 
		case when session_state = 'ON CPU' then 'ON CPU'
		else wait_class end
	order by 2 desc,3;

	ACTIVE_SESSIONS, SAMPLE_TIME_BROWSER_TZ_5MIN, ACTIVITY_CLASS
					1	06-FEB-19 03:30:00	System I/O
					1	06-FEB-19 01:35:00	System I/O
					1	06-FEB-19 12:20:00	Other
					1	06-FEB-19 12:05:00	System I/O
					1	06-FEB-19 11:30:00	System I/O
					1	06-FEB-19 10:50:00	Other

-- *******************
-- Pivot of above sql
-- *******************
	with pivot_data AS (
		select 
			count(distinct session_id||'-'||session_serial#) as active_sessions,
			trunc( from_tz(sample_time,'+00:00') at time zone 'America/New_York','MI') 
				- mod(extract(minute from from_tz(sample_time,'+00:00') at time zone 'America/New_York'), 5) 
				as sample_time_browser_tz_5min, 
			case when session_state = 'ON CPU' then 'ON CPU'
			else wait_class	end as activity_class
		from DBA_HIST_ACTIVE_SESS_HISTORY where wait_class <> 'Idle'
		group by
			trunc( from_tz(sample_time,'+00:00') at time zone 'America/New_York','MI') 
				- mod(extract(minute from from_tz(sample_time,'+00:00') at time zone 'America/New_York'), 5), 
			case when session_state = 'ON CPU' then 'ON CPU'
			else wait_class end
			)
	--
	select 	sample_time_browser_tz_5min, 
			administrative,
			application,
			clustr,
			commit,
			concurrency,
			configuration,
			idle,
			network,
			other,
			queueing,
			scheduler,
			system_io,
			user_io
	from pivot_data
	pivot
	( sum(active_sessions)
	for activity_class
		in ('Administrative' as administrative,
			'Application'	 as application,
			'Cluster'		 as clustr,
			'Commit'		 as commit,
			'Concurrency'	 as concurrency,
			'Configuration'	 as configuration,
			'Idle'			 as idle,
			'Network'		 as network,
			'Other'			 as other,
			'Queueing'		 as queueing,
			'Scheduler'		 as scheduler,
			'System I/O'	 as system_io,
			'User I/O'		 as user_io)
	)
	order by sample_time_browser_tz_5min desc

-- *******************
-- to group by Wait Events given specific wait class
--
-- lets say we want wait_class 'System I/O', browser TZ is 'America/New_York' and db OS TZ is also 'America/New_York'
-- and browser sent in a date_range :  1550582310898 1550593115934
-- *******************

	with pivot_data AS (
		  -- we divide count by 5 because we aggregate over 5-sec interval
		  -- and ASH has samples on every second
		  -- If we did not divide then single active session would count 5 times
        select count(1)/5 as active_sessions
				-- we aggregate over 5 sec because 1 sec is too much detailed for browser graph.
				-- we convert sample time from db OS time zone to browser time zone 
			,to_char(
                 from_tz(sample_time,'America/New_York' /* <--DB OS TZ */) at time zone 'America/New_York' /* <-- browser TZ */
                    - mod(extract(second from sample_time), 5)/60/60/24 
                 , 'YYYY/MM/DD HH24:MI:SS')
             as sample_time_browser_tz_5sec
			,event
		from v$active_session_history 
		where wait_class =  'System I/O'
			-- we focus on date range corresponding browser-supplied UTC milliseconds
			-- we convert from UTC to db OS time zone
        and sample_time between
             cast((from_tz(cast(DATE '1970-01-01' as timestamp),'00:00' /*<-- UTC TZ */) at time zone 'America/New_York'/* <-- browser TZ */) as date)
               + ( 1 / 24 / 60 / 60 )/1000 * 1550582310898
             and 
             cast((from_tz(cast(DATE '1970-01-01' as timestamp),'00:00' /*<-- UTC TZ */) at time zone 'America/New_York')/* <-- browser TZ */ as date)
               + ( 1 / 24 / 60 / 60 )/1000 * 1550593115934
		group by 
			to_char(
                 from_tz(sample_time,'America/New_York'/* <--DB OS TZ */) at time zone 'America/New_York' /* <-- browser TZ */
                    - mod(extract(second from sample_time), 5)/60/60/24 
                 , 'YYYY/MM/DD HH24:MI:SS')
			,event
		)
	--
	-- pivot below
	--
    select * from pivot_data
	from pivot_data
	pivot
	( sum(active_sessions)
	for activity_class
		-- in  ({str1})  -- list of columns (events) here; use sql below to get list
		in  ('log file parallel write','db file parallel write','control file sequential read','control file parallel write','log file sequential read')
	)
	order by sample_time_browser_tz desc

-- *******************
-- to get list of top 10 events for given wait class within same date range:
-- *******************
    select event from (
       select count(1), event
       from v$active_session_history
       where wait_class = 'Application'
        and sample_time between
             cast((from_tz(cast(DATE '1970-01-01' as timestamp),'00:00') at time zone 'America/New_York') as date)
               + ( 1 / 24 / 60 / 60 )/1000 * 1550582310898
             and 
             cast((from_tz(cast(DATE '1970-01-01' as timestamp),'00:00') at time zone 'America/New_York') as date)
               + ( 1 / 24 / 60 / 60 )/1000 * 1550593115934
       group by event
       order by 1 desc
    ) where rownum <= 10
